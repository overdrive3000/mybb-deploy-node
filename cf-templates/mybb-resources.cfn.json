{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Provision resource dependencies for the MyBB Forum (e.g., RDS, ElasticCache, SNS Topics), then app on AWS Elastic Beanstalk via the mybb-eb-app substack.",

  "Parameters": {

    "DatabaseUser": {
      "Default": "admin",
      "NoEcho": "true",
      "Type": "String",
      "Description": "Database admin account name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DatabasePassword": {
      "Default": "supersecretpassword",
      "NoEcho": "true",
      "Type": "String",
      "Description": "Database admin account password",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "DatabaseName": {
      "Description": "The name of the database",
      "Type": "String",
      "Default": " mybb"
    },
    "InstanceSecurityGroup" : {
      "Description" : "A VPC Security Group ID that has ingress access to a NAT instance in the VPC. EB instances will be launched into this group.",
      "Type": "String"
    },
    "VPCId" : {
      "Description" : "A VPC ID.",
      "Type": "String"
    },
    "PrivateSubnet1" : {
      "Description" : "A private VPC subnet ID.",
      "Type": "String"
    },
    "PrivateSubnet2" : {
      "Description" : "A private VPC subnet ID. Must be in a different AZ than PrivateSubnet1",
      "Type": "String"
    },
		"OperatorEMail": {
			"Description": "EMail address to notify CPU high workload",
			"Type": "String",
			"AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
			"ConstraintDescription": "must be a valid email address.",
			"Default": "linuxven@gmail.com"
		}
  },

  "Resources": {
		"AppBucket": {
			"Type": "AWS::S3::Bucket"
		},
    "CacheSubnetGroup" : {
        "Type" : "AWS::ElastiCache::SubnetGroup",
        "Properties" : {
            "Description" : "Cache Subnet Group",
            "SubnetIds": [{
              "Ref": "PrivateSubnet1"
            }, {
              "Ref": "PrivateSubnet2"
            }]
        }
    },
    "CacheParameters" : {
      "Type" : "AWS::ElastiCache::ParameterGroup",
      "Properties" : {
        "CacheParameterGroupFamily" : "memcached1.4",
        "Description" : "Parameter group",
        "Properties" : {
          "cas_disabled" : "1"
        }
      }
    },
    "CacheSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow access to the cache from the Web Server",
        "VpcId" : { "Ref" : "VPCId" },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "0",
          "ToPort": "65535",
          "SourceSecurityGroupId": {
            "Ref": "InstanceSecurityGroup"
          }
        }],
        "SecurityGroupEgress": [{
          "IpProtocol": "tcp",
          "FromPort": "0",
          "ToPort": "65535",
          "SourceSecurityGroupId": {
            "Ref": "InstanceSecurityGroup"
          }
        }]
      }      
    },  
    "CacheCluster" : {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "CacheSubnetGroupName" : { "Ref" : "CacheSubnetGroup" },
        "CacheNodeType"        : "cache.t1.micro",
        "VpcSecurityGroupIds"  : [ { "Ref" : "CacheSecurityGroup" } ],
        "Engine"               : "memcached",
        "NumCacheNodes"        : "2"
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow the Elastic Beanstalk instances to access the RDS database",
        "VpcId": {
          "Ref": "VPCId"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306",
          "SourceSecurityGroupId": {
            "Ref": "InstanceSecurityGroup"
          }
        }],
        "SecurityGroupEgress": [{
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306",
          "CidrIp": "0.0.0.0/0"
        }]
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS DB Subnet group",
        "SubnetIds": [{
          "Ref": "PrivateSubnet1"
        }, {
          "Ref": "PrivateSubnet2"
        }]
      }
    },
    "Database": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBName": {
          "Ref": "DatabaseName"
        },
        "MasterUsername": {
          "Ref": "DatabaseUser"
        },
        "DBInstanceClass": "db.t2.micro",
        "AllocatedStorage": "5",
        "MasterUserPassword": {
          "Ref": "DatabasePassword"
        },
        "VPCSecurityGroups": [{
          "Ref": "DBSecurityGroup"
        }],
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        }
      }
    },
		"NotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [ { "Endpoint": { "Ref": "OperatorEMail" }, "Protocol": "email" } ]
      }
		}
  },
  "Outputs": {
    "InstanceSecurityGroup": {
      "Value": {"Ref": "InstanceSecurityGroup"}
    },
    "RdsDbId": {
       "Value" : { "Ref" : "Database" }
    },
		"RdsEndPoint": {
			"Value": { "Fn::GetAtt": [ "Database", "Endpoint.Address" ] }
		},
    "CacheEndpoint": { 
      "Value": { "Fn::GetAtt" : [ "CacheCluster", "ConfigurationEndpoint.Address" ]}
    },
    "CachePort": { 
      "Value" : {"Fn::GetAtt" : [ "CacheCluster", "ConfigurationEndpoint.Port" ]}
    },
		"AppBucket": {
			"Value": { "Ref": "AppBucket" }
		},
    "DatabaseUser":{
      "Value": { "Ref" : "DatabaseUser"}
    },
    "DatabasePassword": {
      "Value": { "Ref" : "DatabasePassword" }
    },
    "InstanceSecurityGroup": {
      "Value": { "Ref" : "InstanceSecurityGroup" }
    }
  }
}
